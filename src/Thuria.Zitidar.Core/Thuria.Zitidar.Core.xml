<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Thuria.Zitidar.Core</name>
    </assembly>
    <members>
        <member name="T:Thuria.Zitidar.Core.Cache.IThuriaCache`1">
            <summary>
            Thuria Cache
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.Cache.IThuriaCache`1.ExpiryInSeconds">
            <summary>
            Cache Expiry in Seconds
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.Cache.IThuriaCache`1.ExistsAsync(System.String)">
            <summary>
            Determine if the Key exists in the Cache (Async)
            </summary>
            <param name="cacheKey">Cache Data Key</param>
            <returns>
            A boolean indicating whether the data item exists and not expired
            </returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.Cache.IThuriaCache`1.UpsertAsync(System.String,Thuria.Zitidar.Core.Cache.IThuriaCacheData{`0},System.Boolean)">
            <summary>
            Insert / Update the Cache Data Item (Async)
            </summary>
            <typeparam name="T">Data Type</typeparam>
            <param name="cacheKey">Cache Key</param>
            <param name="cacheValue">Cache Value</param>
            <param name="setCacheExpiry">Set the Cache Expiry Value (Optional - Default true)</param>
            <returns>
            A boolean indicating if the Upsert was successful
            </returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.Cache.IThuriaCache`1.GetAsync(System.String)">
            <summary>
            Get Cache Value (Async)
            </summary>
            <param name="cacheKey">Cache Key</param>
            <returns>
            Null if item not found
            Cache Value if Cache Value found
            </returns>
        </member>
        <member name="T:Thuria.Zitidar.Core.Cache.IThuriaCacheData`1">
            <summary>
            Thuria Cache Data
            </summary>
            <typeparam name="T">Cache Value Data Type</typeparam>
        </member>
        <member name="P:Thuria.Zitidar.Core.Cache.IThuriaCacheData`1.Expiry">
            <summary>
            Data Expiry Date
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.Cache.IThuriaCacheData`1.Value">
            <summary>
            Data Value
            </summary>
        </member>
        <member name="T:Thuria.Zitidar.Core.LogSeverity">
            <summary>
            Logger Severity Enumerations
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.LogSeverity.Debug">
            <summary>
            Log all messages
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.LogSeverity.Info">
            <summary>
            Log Info, Warning, Error and Exception messages
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.LogSeverity.Warning">
            <summary>
            Log Warning, Error and Exception messages
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.LogSeverity.Error">
            <summary>
            Log Error and Exception messages
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.LogSeverity.Exception">
            <summary>
            Log Exception messages
            </summary>
        </member>
        <member name="T:Thuria.Zitidar.Core.ThuriaSettingsType">
            <summary>
            Thuria Settings Type
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.ThuriaSettingsType.JsonFile">
            <summary>
            JSON Settings File
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.ThuriaSettingsType.Environment">
            <summary>
            Environment Variables
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.ThuriaSettingsType.CommandLine">
            <summary>
            Command Line
            </summary>
        </member>
        <member name="F:Thuria.Zitidar.Core.ThuriaSettingsType.JsonFileEnvironment">
            <summary>
            Json File and Environment Variables
            </summary>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaBootstrapper">
            <summary>
            Thuria Bootstrapper
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaBootstrapper.IocContainer">
            <summary>
            Thuria IOC Container
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaBootstrapper.Build">
            <summary>
            Build the bootstrapper
            </summary>
            <returns></returns>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaIocContainer">
            <summary>
            Thuria IOC Container
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaIocContainer.Container">
            <summary>
            Underlying Raw Container
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaIocContainer.GetInstance``1">
            <summary>
            Get an instance of type T from the container
            </summary>
            <typeparam name="T">Type</typeparam>
            <returns>Object of type T as requested</returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaIocContainer.GetInstance``1(System.String)">
            <summary>
            Get a named instance of type T from the container
            </summary>
            <param name="instanceName">Name of the instance</param>
            <returns>Named instance of Object of type T as requested</returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaIocContainer.GetInstance(System.Type)">
            <summary>
            Get an instance of Type from the container
            </summary>
            <param name="requiredType">Instance Type</param>
            <returns>An object of the specified Type</returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaIocContainer.GetInstance(System.Type,System.String)">
            <summary>
            Get a named instance of Type from the container
            </summary>
            <param name="requiredType">Instance Type</param>
            <param name="instanceName">Name of the instance</param>
            <returns>An object of the specified Type registered with the specified name</returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaIocContainer.GetAllInstances``1">
            <summary>
            Get a list of items of Type T from the container
            </summary>
            <typeparam name="T">Instance Type</typeparam>
            <returns>A list of instances implementing Type T</returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaIocContainer.GetAllInstances(System.Type)">
            <summary>
            Get a list of items of Type from the container
            </summary>
            <param name="instanceType">Instance Type</param>
            <returns>A list of instances implementing Type</returns>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaNamedInstance">
            <summary>
            Thuria Named Instance
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaNamedInstance.Name">
            <summary>
            Name of the Instance
            </summary>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaService">
            <summary>
            Thuria Service
            </summary>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaStartable">
            <summary>
            Thuria Startable object
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaStartable.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaStartable.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start the Service (Async)
            </summary>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>An awaitable task</returns>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaStoppable">
            <summary>
            Thuria Stoppable object
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaStoppable.Stop">
            <summary>
            Stop
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaStoppable.StopAsync">
            <summary>
            Start the Service (Async)
            </summary>
            <returns>An awaitable task</returns>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaLogger">
            <summary>
            Thuria Logger
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaLogger.LogMessage(Thuria.Zitidar.Core.LogSeverity,System.String,System.Exception)">
            <summary>
            Log a message
            </summary>
            <param name="logSeverity">Log Severity</param>
            <param name="logMessage">Log message</param>
            <param name="exceptionMessage">Exception (optional)</param>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaSerializer">
            <summary>
            Thuria Serializer
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaSerializer.DeserializeObject``1(System.String,System.Boolean)">
            <summary>
            Deserialize an object
            </summary>
            <typeparam name="T">Object Type</typeparam>
            <param name="serializationString">Serialization String</param>
            <param name="throwException">Throw Exception on failure indicator (Default = false)</param>
            <returns>
            If serialization fails and throwException is false, a null is returned
            If serialization fails and throwException is true, an exception is thrown with the error details
            A newly created object of type with its data deserialized from the input string
            </returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaSerializer.DeserializeObject(System.String,System.Boolean)">
            <summary>
            Deserialize an object
            </summary>
            <param name="serializationString">Serialization String</param>
            <param name="throwException">Throw Exception on failure indicator (Default = false)</param>
            <returns>
            If serialization fails and throwException is false, a null is returned
            If serialization fails and throwException is true, an exception is thrown with the error details
            A newly created object with its data deserialized from the input string
            </returns>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaSerializer.SerializeObject``1(``0,Thuria.Zitidar.Core.IThuriaSerializerSettings)">
            <summary>
            Serialize an object to a string
            </summary>
            <typeparam name="T">Object Type</typeparam>
            <param name="objectToSerialize">Object to serialize</param>
            <param name="serializerSettings">Serializer Settings (Optional)</param>
            <returns>String representation of the object</returns>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaSerializerSettings">
            <summary>
            Thuria Serializer Settings (Based on the Newtonsoft.JSON serialization framework />
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.ConstructorHandling">
            <summary>
            Constructor Handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.ContractResolver">
            <summary>
            Contract Resolver
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.TypeNameHandling">
            <summary>
            Type Name Handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.TypeNameAssemblyFormatHandling">
            <summary>
            Type Name Assembly Format Handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.Formatting">
            <summary>
            Formatting
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.NullValueHandling">
            <summary>
            Null Value handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.ReferenceLoopHandling">
            <summary>
            Reference Loop Handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.PreserveReferencesHandling">
            <summary>
            Preserve References Handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.DateTimeZoneHandling">
            <summary>
            Date Time Zone Handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.DateFormatHandling">
            <summary>
            Date Format Handling
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.SerializationBinder">
            <summary>
            Serialization Binder
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSerializerSettings.Converters">
            <summary>
            Converters
            </summary>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaDatabaseSettings">
            <summary>
            Thuria Database Settings
            </summary>
        </member>
        <member name="M:Thuria.Zitidar.Core.IThuriaDatabaseSettings.GetConnectionString(System.String)">
            <summary>
            Retrieve the Connection String for the given Database Context Name
            </summary>
            <param name="dbContextName">Database Context Name</param>
            <returns></returns>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaNancySettings">
            <summary>
            Thuria Nancy Settings
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaNancySettings.HostBaseUri">
            <summary>
            Host Base URI
            </summary>
        </member>
        <member name="T:Thuria.Zitidar.Core.IThuriaSettings">
            <summary>
            Thuria Settings
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSettings.ApplicationName">
            <summary>
            Application Name
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSettings.StartDebugMode">
            <summary>
            Start the Application in Debug Mode indicator
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSettings.SettingsType">
            <summary>
            Settings Type
            </summary>
        </member>
        <member name="P:Thuria.Zitidar.Core.IThuriaSettings.SettingFilename">
            <summary>
            Settings Filename
            </summary>
        </member>
    </members>
</doc>
